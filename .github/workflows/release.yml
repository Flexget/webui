name: Build Release
on:
  deployment: {}
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12.x]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: actions/checkout@v2
        name: Checkout Flexget
        with:
          ref: develop
          repository: Flexget/flexget
          path: flexget
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Setup Git
        run: |
          git config --global user.email $GIT_EMAIL
          git config --global user.name $GIT_USERNAME
          git fetch --no-tag origin +refs/heads/master:refs/remotes/origin/master
        env:
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Set Deployment Status In Progress
        uses: ./.github/actions/deployment-status
        with:
          status: in_progress
          token: ${{ github.token }}
      - name: Run Build
        run: yarn build
      - name: Zip Dist Folder
        run: zip -r /tmp/dist.zip ./dist
      - name: Release
        run: scripts/release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Deployment Status Success
        uses: ./.github/actions/deployment-status
        with:
          status: success
          tokenu: ${{ github.token }}
      - name: Set Deployment Status Failure
        if: failure() || cancelled()
        uses: ./.github/actions/deployment-status
        with:
          status: failure
          token: ${{ github.token }}
